@using System.Data.Entity.Core.Objects
@model LUSSIS.Models.WebDTO.DeptHeadDashBoardDTO
@{
    ViewBag.Title = "My DashBoard";
}

<h2>My DashBoard</h2>
<hr />
<div class="row">
    <div class="col-lg-4 col-md-4 text-center">
        <div class="card border-dark mb-3 text-center bg-transparent" style="max-width: 30rem;">
            <h4 class="card-header mt-0">Pending Requisitions</h4>
            <div class="card-body">

                @if (Model.GetRequisitionListCount != 0)
                {
                    <table class="table mt-3">
                        <tr>
                            <th>
                                No. of Pending Requisitions
                            </th>
                        </tr>
                        <tr>
                            <td>
                                <h3 class="mt-0 mb-0">
                                    @Html.DisplayFor(Model => Model.GetRequisitionListCount)
                                </h3>

                            </td>
                        </tr>
                    </table>
                }
                else
                {
                    <div class="alert alert-dismissible alert-info p-4">
                        <h6>No pending requisitions at the moment.</h6>
                    </div>
                }

            </div>
            <div class="card-footer text-center">
                @if (Model.GetRequisitionListCount != 0)
                {
                    using (Html.BeginForm("Pending", "Requisitions", FormMethod.Post))
                    {
                        <input type="submit" class="btn btn-success" value="View All" style="width:100%" />
                    }
                }
            </div>
        </div>
    </div>
    @if (Model.GetCurrentLoggedIn.JobTitle == "head")
    {
        <div class="col-lg-4 col-md-4 text-center">
            <div class="card border-dark mb-3 text-center bg-transparent" style="max-width: 30rem;">
                <h4 class="card-header mt-0">My @((Model.GetDelegate!=null&& Model.GetDelegate.StartDate<DateTime.Today)?"Current":null) Delegate</h4>

                @if (Model.GetDelegate == null)
                {
                    <div class="card-body">
                        <div class="alert alert-dismissible alert-info p-4">
                            <h6>You have no delegate at the moment</h6>
                        </div>
                    </div>
                    <div class="card-footer text-center">
                        @using (Html.BeginForm("MyDelegate", "RepAndDelegate", FormMethod.Post))
                        {
                            <input type="submit" class="btn btn-success" value="Set My Delegate" style="width: 100%" />
                        }
                    </div>
                }
                else
                {
                    <div class="card-body">
                        @if (Model.GetDelegate != null)
                        {
                        <table class="table mt-2">
                            <tr>
                                <th>@Html.DisplayFor(model => model.GetDelegate.StartDate) - @Html.DisplayFor(model => model.GetDelegate.EndDate)</th>
                            </tr>

                            <tr>
                                <td>
                                    <h3 class="mt-0 mb-0">@Html.DisplayFor(model => model.GetDelegate.Employee.FullName)</h3>
                                </td>

                            </tr>

                        </table>
                        }
                        @if (@Model.GetDelegate.StartDate>DateTime.Today)
                        {
                            <h6 class="text-muted">Activated in @((int)(Model.GetDelegate.StartDate.Subtract(DateTime.Now)).TotalDays) days</h6>
                        }
                        
                    </div> <div class="card-footer text-center">
                        @using (Html.BeginForm("DeleteDelegateFromDB", "RepAndDelegate", FormMethod.Post))
                        {
                            <input type="submit" class="btn btn-success" value="Revoke Delegate" style="width: 100%" />
                        }
                    </div>
                }
            </div>
        </div>
    }
    else
    {
        <div class="col-lg-4 col-md-4">
            <div class="card border-dark mb-3 text-center bg-transparent" style="max-width: 30rem;">
                <h4 class="card-header mt-0">Your Delegation period</h4>
        <div class="card-body">
            
        <table class="table mt-2">
            <tr>
                <th>@Html.DisplayFor(model => model.GetDelegate.StartDate) - @Html.DisplayFor(model => model.GetDelegate.EndDate)</th>
            </tr>

            <tr>
                <td>
                    <h3 class="mt-2 mb-0 text-muted">Ending in @((int)(Model.GetDelegate.EndDate.Subtract(DateTime.Now)).TotalDays) days</h3>
                </td>

            </tr>

        </table>



        </div> <div class="card-footer text-center">
            @using (Html.BeginForm("DeleteDelegateFromDB", "RepAndDelegate", FormMethod.Post))
    {
        <input type="submit" class="btn btn-secondary" value="Revoke Delegate" style="width: 100%" disabled=""/>
}
        </div>


        </div>
        </div>
    }
    <div class="col-lg-4 col-md-4 text-center">
        <div class="card border-dark mb-3 text-center bg-transparent" style="max-width: 30rem;">
            <h4 class="card-header mt-0">Department Rep</h4>
            <div class="card-body">
                @if (Model.Department.RepEmployee != null)
                {
                    <table class="table mt-3">
                        <tr>
                            <th>
                                Current Department Rep
                            </th>
                        </tr>

                        <tr>
                            <td><h3 class="mt-0 mb-0">
                                    @Html.DisplayFor(model => model.Department.RepEmployee.FullName)</h3>
                            </td>
                        </tr>
                    </table>
                }
                else
                {
                    <div class="alert alert-dismissible alert-info p-4">
                        <h6>No department representative at the moment.</h6>
                    </div>
                }


                
            </div>
            <div class="card-footer text-center">
                @using (Html.BeginForm("DeptRep", "RepAndDelegate", FormMethod.Post))
    {
        if ((User.IsInRole("head") && Model.GetTodaysDelegate == null) || (User.IsInRole("staff") && Model.GetTodaysDelegate != null))
        {
            <input type="submit" class="btn btn-success" value="Change Rep" style="width: 100%" />
                    }
        else
        {
            <input type="submit" class="btn btn-secondary" value="Change Rep" style="width: 100%" disabled=""/>
        }

                }

            </div>
        </div>
    </div>
</div>


