
@using System.Web.UI.WebControls
@using LUSSIS.Models.WebDTO
@model RetrievalItemsWithDateDTO

<link rel="stylesheet" href="https://code.jquery.com/ui/1.12.1/themes/smoothness/jquery-ui.css">
@{
    ViewBag.Title = "Consolidated";
}
<h2>Consolidated Stationery Requisitions</h2>
<hr/>

@if (Model.retrievalItems == null || !Model.retrievalItems.Any())
{
    <div class="alert alert-dismissible alert-info">
        <strong>Interesting...</strong> <br />There is no requisition and remaining items to be viewed.
    </div>
}
else
{
    @*We are able to generate multiple batches of disbursements, however retrieval in process list will combine all disbursement that are inprocess.
        Since generating multiple batches of retrieval is not a business requirement, we will omit this funtion *@
    if (Model.hasInprocessDisbursement)
    {
        <div class="alert alert-dismissible alert-info">
            <strong>
                There are already disbursements in process . <br />
            </strong> You can arrange for new disbursements once the current ones are completed.
        </div>
    }
    else
    {
        <hr />
        <nav class="navbar navbar-expand-lg navbar-light bg-light">
            <div class="navbar-nav mr-auto"></div>
            @using (Html.BeginForm("Retrieve", "Requisitions", FormMethod.Post, new { @class = "form-inline my-2 my-lg-0" }))
            {
                @Html.AntiForgeryToken()

                @Html.LabelFor(model => model.collectionDate, "Select a collection date", new { @class = "nav-item nav-link" })
                <input type="text" class="form-control" name="collectionDate" id="collectionDate" onkeydown="return false">
                @Html.ValidationMessageFor(model => model.collectionDate, "must be later than today", new { @class = "invalid-feedback" })

                <div class="nav-item nav-link"><button type="submit" class="btn btn-outline-success my-2 my-sm-0">Arrange Retrieval and Disbursment</button></div>
            }
        </nav>
        <hr />

    }

    <table id="long-table" class="table table-hover table-striped">
        <thead>
            <tr>
                <th scope="col">Bin Num</th>
                <th scope="col">Stationery</th>
                <th scope="col">UOM</th>
                <th scope="col">Requested Qty*</th>
                <th scope="col">Available Qty</th>
                
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model.retrievalItems)
            {
                <tr>

                    <td>
                        @Html.DisplayFor(modelItem => item.BinNum)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Description)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.UnitOfMeasure)
                    </td>

                    <td>
                        @(item.RequestedQty + item.RemainingQty)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.AvailableQty)
                    </td>

                </tr>
            }
        </tbody>

    </table>
    <small id="fileHelp" class="form-text text-muted">*Unfullfilled Qty from previous disbursements has been added to Requested Qty</small>

}

@section scripts {
    @*<script src="https://code.jquery.com/jquery-1.12.4.js"></script>*@
    <script src="https://code.jquery.com/ui/1.12.1/jquery-ui.js"></script>
    <script>
        $(function () {
            $("#collectionDate")
                .datepicker({
                    minDate: 0,
                    maxDate: "+1M +10D",
                    dateFormat: "dd/mm/yy"
                });
        });
    </script>

}
