@model LUSSIS.Models.WebDTO.PurchaseOrderDTO
@{
    ViewBag.Title = "Details";
}
@Scripts.Render("~/bundles/jquery")
<h2>Purchase Order Details</h2>

<div>
    <hr />
    <dl class="dl-horizontal">
        <dt>
            Purchase Order No
        </dt>
        <dd>
            <input type="number" value="@Model.PoNum" disabled" name="PoNum" id="PoNum" />
        </dd>
        <dt>
            Status
        </dt>
        <dd>
            <input type="text" value="@Model.Status" disabled />
        </dd>
        <dt>
            Created By
        </dt>
        <dd>
            @Html.HiddenFor(model => model.OrderEmpNum)
            <input type="text" value="@Model.OrderEmployee.FullName" disabled />
        </dd>
        <dt>
            Created On
        </dt>
        <dd>
            @Html.HiddenFor(model => model.CreateDate)
            <input type="date" value="@Model.CreateDate.Value.ToString("yyyy-MM-dd")" disabled />
        </dd>
        @if (Model.ApprovalEmpNum == null)
    {
        <dt>
            Approved By
        </dt>
        <dd>
            @Html.HiddenFor(model => model.ApprovalEmpNum)
            <input type="text" value="@(Model.ApprovalEmployee == null ? "" : Model.ApprovalEmployee.FullName)" disabled />
        </dd>
        <dt>
            Approved On
        </dt>
        <dd>
            @Html.HiddenFor(model => model.ApprovalDate)
            <input type="date" value="@(Model.ApprovalDate == null ? "" : Model.ApprovalDate.Value.ToString("yyyy-MM-dd"))" disabled />
        </dd>
}
        @if (Model.OrderDate == null)
    {
        <dt>
            Order Date
        </dt>
        <dd>
            <input type="date" value="@(Model.OrderDate == null ? "" : Model.OrderDate.Value.ToString("yyyy-MM-dd"))" disabled name="OrderDate" />
        </dd>
}
        <dt>
            Supplier Name
        </dt>
        <dd>
            @Html.HiddenFor(model => model.SupplierId)
            <input type="text" value="@Model.Supplier.SupplierName" disabled />
        </dd>
        <dt>
            Supplier Contact Name
        </dt>
        <dd>
            <input type="text" value="@Model.Supplier.ContactName" disabled />
        </dd>
    </dl>

    <table class="table">
        <tr>
            <th>No</th>
            <th>Product</th>
            <th>Item No</th>
            <th>Unit of Measure</th>
            <th>Unit Price</th>
            <th>Ordered Qty</th>
            <th>Total Price</th>
            <th>Status</th>
        </tr>
        @for (int i = 0; i < Model.PurchaseOrderDetails.Count; i++)
        {
        <tr>
            <td>@(i + 1)</td>
            <td>@Model.PurchaseOrderDetails[i].Stationery.Description</td>
            <td>@Model.PurchaseOrderDetails[i].Stationery.ItemNum</td>
            <td>@Model.PurchaseOrderDetails[i].Stationery.UnitOfMeasure</td>
            <td>@Model.PurchaseOrderDetails[i].UnitPrice</td>
            <td>@Model.PurchaseOrderDetails[i].OrderQty</td>
            <td>@(Model.PurchaseOrderDetails[i].UnitPrice * Model.PurchaseOrderDetails[i].OrderQty)</td>
            <td>@(Model.PurchaseOrderDetails[i].ReceiveQty > 0 ? "Delivered" : "Not Delivered")</td>
        </tr>
        }
    </table>
</div>
<p>
    @if (Model.Status == "approved")
    {
        @Html.ActionLink("Order", "Order", new { p = Model.PoNum })
    }
    @if (Model.Status == "ordered")
    {
        @Html.ActionLink("Receive", "Receive", new { p = Model.PoNum })
    }
    @Html.ActionLink("Back to List", "Summary")
</p>

<script>
    var details=@Model.PoNum;

    $(document).on('change', '#PoNum', function () {
        if (confirm('Navigate from page?')) {
            var newLink = "/PurchaseOrders/Details/" + $(this).val();
            window.location.replace(newLink);
        }
        else { $(this).val(details) }
    });
</script>


