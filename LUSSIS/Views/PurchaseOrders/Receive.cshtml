@model LUSSIS.Models.WebDTO.ReceiveTransDTO

@{
    ViewBag.Title = "Receive";
}

<h2>Purchase Order - Receive</h2>
<hr />
@if (ViewBag.Error != null)
{
    <div class="alert alert-danger">
        @ViewBag.Error
    </div>
}

@if (@ViewBag.PurchaseOrder == null)
{
    if (ViewBag.OrderedPO == null || ViewBag.OrderedPO.Count == 0)
    {
        <div class="alert alert-dismissible alert-info">
            <span>There are no purchase orders awaiting for shipment</span>
        </div>
    }
    else
    {
        @Scripts.Render("~/bundles/jquery")
        <h6 type="text" class="control-label col-md-12">Select a Purchase Order to update receipt of stationery</h6>

        <div class="col-md-12">
            <select id="select_PO" class="form-control">
                <option value="0">Select a purchase order</option>
                @foreach (var po in ViewBag.OrderedPO)
                {
                    <option value="@po.PoNum">
                        @po.PoNum - @po.Supplier.SupplierName
                    </option>
                }
            </select>
        </div>
    }
}
else
{

    using (Html.BeginForm())
    {
        <div>
            <hr />
            @Html.Hidden("PoNum", (int)@ViewBag.PurchaseOrder.PoNum)

            @Html.AntiForgeryToken()
            <dl class="dl-horizontal">
                <dt>
                    @Html.Raw("Purchase Order No")
                </dt>
                <dd>
                    @Html.TextBox("PoNum", (int)@ViewBag.PurchaseOrder.PoNum, new { disabled = "disabled" })
                </dd>
                <dt>
                    @Html.Raw("Created By")
                </dt>
                <dd>
                    @Html.TextBox("PoOrderEmpNum", (string)@ViewBag.PurchaseOrder.OrderEmployee.FullName, new { disabled = "disabled" })
                </dd>
                <dt>
                    @Html.Raw("Created Date")
                </dt>
                <dd>
                    <input type="date" value="@ViewBag.PurchaseOrder.CreateDate.ToString("yyyy-MM-dd")" disabled />
                </dd>
                <dt>
                    @Html.Raw("Approved By")
                </dt>
                <dd>
                    @Html.TextBox("PoApprovalEmpNum", (string)@ViewBag.PurchaseOrder.ApprovalEmployee.FullName, new { disabled = "disabled" })
                </dd>
                <dt>
                    @Html.Raw("Approval Date")
                </dt>
                <dd>
                    <input type="date" value="@ViewBag.PurchaseOrder.ApprovalDate.ToString("yyyy-MM-dd")" disabled />
                </dd>
                <dt>
                    @Html.Raw("Order Date")
                </dt>
                <dd>
                    <input type="date" value="@ViewBag.PurchaseOrder.OrderDate.ToString("yyyy-MM-dd")" disabled />
                </dd>
                <dt>
                    @Html.Raw("Supplier Name")
                </dt>
                <dd>
                    @Html.TextBox("PoSupplierName", (string)@ViewBag.PurchaseOrder.Supplier.SupplierName, new { disabled = "disabled" })
                </dd>
                <dt>
                    @Html.Raw("Supplier Contact Name")
                </dt>
                <dd>
                    @Html.TextBox("PoSupplierContactName", (string)@ViewBag.PurchaseOrder.Supplier.ContactName, new { disabled = "disabled" })
                </dd>
                <dt>
                    @Html.Raw("Delivery Order No")
                </dt>
                <dd>
                    @Html.EditorFor(model => model.DeliveryOrderNum)
                </dd>
                <dt>
                    @Html.Raw("Invoice No")
                </dt>
                <dd>
                    @Html.EditorFor(model => model.InvoiceNum)
                </dd>
                <dt>
                    @Html.Raw("Received Date")
                </dt>
                <dd>
                    <input type="date" name="ReceiveDate" value="@Model.ReceiveDate.ToString("yyyy-MM-dd")" />
                </dd>

            </dl>
            <table class="table">
                <tr>
                    <th>No</th>
                    <th>Product</th>
                    <th>Unit of Measure</th>
                    <th>Order Qty</th>
                    <th>Received Qty (Before)</th>
                    <th>Received Qty (Now)</th>
                </tr>

                @if (ViewBag.PurchaseOrder != null)
                {
                    for (int i = 0; i < ViewBag.PurchaseOrder.PurchaseOrderDetails.Count; i++)
                    {
                        <tr>
                            <td>@(i + 1)</td>
                            <td>@ViewBag.PurchaseOrder.PurchaseOrderDetails[i].Stationery.Description</td>
                            <td>@ViewBag.PurchaseOrder.PurchaseOrderDetails[i].Stationery.UnitOfMeasure</td>
                            <td>@ViewBag.PurchaseOrder.PurchaseOrderDetails[i].OrderQty</td>
                            <td>@ViewBag.PurchaseOrder.PurchaseOrderDetails[i].ReceiveQty</td>
                            <td>
                                @Html.HiddenFor(model => model.ReceiveTransDetails[i].ItemNum)
                                @Html.EditorFor(model => model.ReceiveTransDetails[i].Quantity)
                            </td>
                        </tr>
                    }
                }
            </table>
        </div>
        <p>

            <input type="submit" value="Receive" class="btn btn-default" />

        </p>
    }
}

<script>
    //redirect page if PO selected from no-PO page
    $(document).on('change', '#select_PO', function () {
        if ($(this).val() != 0) {
            var newLink = "/PurchaseOrders/Receive?p=" + $(this).val();
            window.location.replace(newLink);
        }
    });
</script>
