@model LUSSIS.Models.WebDTO.AdjustmentVoucherDTO

@{
    ViewBag.Title = "CreateAdjustment1";
}

<h2>Stock Adjustment</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">

        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        <div class="form-group">
            @Html.LabelFor(model => model.ItemNum, "Item Code:", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DisplayFor(model => model.ItemNum)

            </div>
        </div>
        @Html.HiddenFor(m => m.ItemNum)


        <div class="form-group">
            @Html.LabelFor(model => model.Stationery.Description, "Item Description:", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DisplayFor(model => model.Stationery.Description)
            </div>
        </div>
        @Html.HiddenFor(m => m.Stationery.Description)
        <div class="form-group">
            @Html.LabelFor(model => model.Stationery.UnitOfMeasure, "UOM", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DisplayFor(model => model.Stationery.UnitOfMeasure)
            </div>
        </div>
        <div class="form-group">
            @Html.Label("Adjustment Type: ", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                - @Html.RadioButtonFor(model => model.Sign, false)
                + @Html.RadioButtonFor(model => model.Sign, true)
                @Html.ValidationMessageFor(model => model.Sign, "", new { @class = "text-danger" })
            </div>
        </div>


        <div class="form-group">
            @Html.LabelFor(model => model.Quantity, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Quantity, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Quantity, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Reason, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Reason, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Reason, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>